@inject IHotelBookingSystemApiWrapper HotelBookingSystemApi

<Modal @ref="HotelModal">
    <ModalContent Centered>
        <Form>
            <ModalHeader>
                <ModalTitle>Новый отель</ModalTitle>
                <CloseButton Clicked="CloseHotelModalAsync" />
            </ModalHeader>

            <ModalBody>
                <Field>
                    <FieldLabel>Название</FieldLabel>
                    <TextEdit @bind-Text="@NewHotel.Name" />
                </Field>
                <Field>
                    <FieldLabel>Адрес</FieldLabel>
                    <TextEdit @bind-Text="@NewHotel.Address" />
                </Field>
                <Field>
                    <FieldLabel>Город</FieldLabel>
                    <TextEdit @bind-Text="@NewHotel.City" />
                </Field>
            </ModalBody>

            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="CloseHotelModalAsync">Отмена</Button>
                <Button Color="Color.Primary" Clicked="CreateHotelAsync">Создать</Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

@code {
    [Parameter]
    public EventCallback OnHotelAdded { get; set; }

    private Modal HotelModal { get; set; } = new();

    private HotelPostDto NewHotel { get; set; } = new();

    public async Task Show() => await HotelModal.Show();

    private async Task CloseHotelModalAsync() => await HotelModal.Hide();

    private async Task CreateHotelAsync()
    {
        await HotelBookingSystemApi.CreateHotel(NewHotel);
        await HotelModal.Hide();
        await OnHotelAdded.InvokeAsync();
    }
}
